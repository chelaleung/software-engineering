/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2014-04-01 18:14:47 UTC)
 * on 2014-04-14 at 10:14:14 UTC 
 * Modify at your own risk.
 */

package hk.ust.barternbargain.barternbargain;

/**
 * Service definition for Barternbargain (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link BarternbargainRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Barternbargain extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.16.0-rc of the barternbargain library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://cosmic-talent-490.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "barternbargain/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Barternbargain(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Barternbargain(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "acceptTrade".
   *
   * This request holds the parameters needed by the the barternbargain server.  After setting any
   * optional parameters, call the {@link AcceptTrade#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @param sessionId
   * @return the request
   */
  public AcceptTrade acceptTrade(java.lang.Long id, java.lang.String sessionId) throws java.io.IOException {
    AcceptTrade result = new AcceptTrade(id, sessionId);
    initialize(result);
    return result;
  }

  public class AcceptTrade extends BarternbargainRequest<hk.ust.barternbargain.barternbargain.model.Trade> {

    private static final String REST_PATH = "trades/{id}/accept";

    /**
     * Create a request for the method "acceptTrade".
     *
     * This request holds the parameters needed by the the barternbargain server.  After setting any
     * optional parameters, call the {@link AcceptTrade#execute()} method to invoke the remote
     * operation. <p> {@link
     * AcceptTrade#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @param sessionId
     * @since 1.13
     */
    protected AcceptTrade(java.lang.Long id, java.lang.String sessionId) {
      super(Barternbargain.this, "POST", REST_PATH, null, hk.ust.barternbargain.barternbargain.model.Trade.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.sessionId = com.google.api.client.util.Preconditions.checkNotNull(sessionId, "Required parameter sessionId must be specified.");
    }

    @Override
    public AcceptTrade setAlt(java.lang.String alt) {
      return (AcceptTrade) super.setAlt(alt);
    }

    @Override
    public AcceptTrade setFields(java.lang.String fields) {
      return (AcceptTrade) super.setFields(fields);
    }

    @Override
    public AcceptTrade setKey(java.lang.String key) {
      return (AcceptTrade) super.setKey(key);
    }

    @Override
    public AcceptTrade setOauthToken(java.lang.String oauthToken) {
      return (AcceptTrade) super.setOauthToken(oauthToken);
    }

    @Override
    public AcceptTrade setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AcceptTrade) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AcceptTrade setQuotaUser(java.lang.String quotaUser) {
      return (AcceptTrade) super.setQuotaUser(quotaUser);
    }

    @Override
    public AcceptTrade setUserIp(java.lang.String userIp) {
      return (AcceptTrade) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public AcceptTrade setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String sessionId;

    /**

     */
    public java.lang.String getSessionId() {
      return sessionId;
    }

    public AcceptTrade setSessionId(java.lang.String sessionId) {
      this.sessionId = sessionId;
      return this;
    }

    @Override
    public AcceptTrade set(String parameterName, Object value) {
      return (AcceptTrade) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getItem".
   *
   * This request holds the parameters needed by the the barternbargain server.  After setting any
   * optional parameters, call the {@link GetItem#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public GetItem getItem(java.lang.Long id) throws java.io.IOException {
    GetItem result = new GetItem(id);
    initialize(result);
    return result;
  }

  public class GetItem extends BarternbargainRequest<hk.ust.barternbargain.barternbargain.model.Item> {

    private static final String REST_PATH = "items/{id}";

    /**
     * Create a request for the method "getItem".
     *
     * This request holds the parameters needed by the the barternbargain server.  After setting any
     * optional parameters, call the {@link GetItem#execute()} method to invoke the remote operation.
     * <p> {@link
     * GetItem#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetItem(java.lang.Long id) {
      super(Barternbargain.this, "GET", REST_PATH, null, hk.ust.barternbargain.barternbargain.model.Item.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetItem setAlt(java.lang.String alt) {
      return (GetItem) super.setAlt(alt);
    }

    @Override
    public GetItem setFields(java.lang.String fields) {
      return (GetItem) super.setFields(fields);
    }

    @Override
    public GetItem setKey(java.lang.String key) {
      return (GetItem) super.setKey(key);
    }

    @Override
    public GetItem setOauthToken(java.lang.String oauthToken) {
      return (GetItem) super.setOauthToken(oauthToken);
    }

    @Override
    public GetItem setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetItem) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetItem setQuotaUser(java.lang.String quotaUser) {
      return (GetItem) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetItem setUserIp(java.lang.String userIp) {
      return (GetItem) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetItem setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetItem set(String parameterName, Object value) {
      return (GetItem) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getSession".
   *
   * This request holds the parameters needed by the the barternbargain server.  After setting any
   * optional parameters, call the {@link GetSession#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public GetSession getSession(java.lang.String id) throws java.io.IOException {
    GetSession result = new GetSession(id);
    initialize(result);
    return result;
  }

  public class GetSession extends BarternbargainRequest<hk.ust.barternbargain.barternbargain.model.Session> {

    private static final String REST_PATH = "sessions/{id}";

    /**
     * Create a request for the method "getSession".
     *
     * This request holds the parameters needed by the the barternbargain server.  After setting any
     * optional parameters, call the {@link GetSession#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetSession#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetSession(java.lang.String id) {
      super(Barternbargain.this, "GET", REST_PATH, null, hk.ust.barternbargain.barternbargain.model.Session.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetSession setAlt(java.lang.String alt) {
      return (GetSession) super.setAlt(alt);
    }

    @Override
    public GetSession setFields(java.lang.String fields) {
      return (GetSession) super.setFields(fields);
    }

    @Override
    public GetSession setKey(java.lang.String key) {
      return (GetSession) super.setKey(key);
    }

    @Override
    public GetSession setOauthToken(java.lang.String oauthToken) {
      return (GetSession) super.setOauthToken(oauthToken);
    }

    @Override
    public GetSession setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetSession) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetSession setQuotaUser(java.lang.String quotaUser) {
      return (GetSession) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetSession setUserIp(java.lang.String userIp) {
      return (GetSession) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String id;

    /**

     */
    public java.lang.String getId() {
      return id;
    }

    public GetSession setId(java.lang.String id) {
      this.id = id;
      return this;
    }

    @Override
    public GetSession set(String parameterName, Object value) {
      return (GetSession) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getUser".
   *
   * This request holds the parameters needed by the the barternbargain server.  After setting any
   * optional parameters, call the {@link GetUser#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public GetUser getUser(java.lang.String id) throws java.io.IOException {
    GetUser result = new GetUser(id);
    initialize(result);
    return result;
  }

  public class GetUser extends BarternbargainRequest<hk.ust.barternbargain.barternbargain.model.User> {

    private static final String REST_PATH = "users/{id}";

    /**
     * Create a request for the method "getUser".
     *
     * This request holds the parameters needed by the the barternbargain server.  After setting any
     * optional parameters, call the {@link GetUser#execute()} method to invoke the remote operation.
     * <p> {@link
     * GetUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetUser(java.lang.String id) {
      super(Barternbargain.this, "GET", REST_PATH, null, hk.ust.barternbargain.barternbargain.model.User.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetUser setAlt(java.lang.String alt) {
      return (GetUser) super.setAlt(alt);
    }

    @Override
    public GetUser setFields(java.lang.String fields) {
      return (GetUser) super.setFields(fields);
    }

    @Override
    public GetUser setKey(java.lang.String key) {
      return (GetUser) super.setKey(key);
    }

    @Override
    public GetUser setOauthToken(java.lang.String oauthToken) {
      return (GetUser) super.setOauthToken(oauthToken);
    }

    @Override
    public GetUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetUser setQuotaUser(java.lang.String quotaUser) {
      return (GetUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetUser setUserIp(java.lang.String userIp) {
      return (GetUser) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String id;

    /**

     */
    public java.lang.String getId() {
      return id;
    }

    public GetUser setId(java.lang.String id) {
      this.id = id;
      return this;
    }

    @Override
    public GetUser set(String parameterName, Object value) {
      return (GetUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertComment".
   *
   * This request holds the parameters needed by the the barternbargain server.  After setting any
   * optional parameters, call the {@link InsertComment#execute()} method to invoke the remote
   * operation.
   *
   * @param itemId
   * @param message
   * @param sessionId
   * @return the request
   */
  public InsertComment insertComment(java.lang.Long itemId, java.lang.String message, java.lang.String sessionId) throws java.io.IOException {
    InsertComment result = new InsertComment(itemId, message, sessionId);
    initialize(result);
    return result;
  }

  public class InsertComment extends BarternbargainRequest<hk.ust.barternbargain.barternbargain.model.Comment> {

    private static final String REST_PATH = "items/{itemId}/comments";

    /**
     * Create a request for the method "insertComment".
     *
     * This request holds the parameters needed by the the barternbargain server.  After setting any
     * optional parameters, call the {@link InsertComment#execute()} method to invoke the remote
     * operation. <p> {@link InsertComment#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param itemId
     * @param message
     * @param sessionId
     * @since 1.13
     */
    protected InsertComment(java.lang.Long itemId, java.lang.String message, java.lang.String sessionId) {
      super(Barternbargain.this, "POST", REST_PATH, null, hk.ust.barternbargain.barternbargain.model.Comment.class);
      this.itemId = com.google.api.client.util.Preconditions.checkNotNull(itemId, "Required parameter itemId must be specified.");
      this.message = com.google.api.client.util.Preconditions.checkNotNull(message, "Required parameter message must be specified.");
      this.sessionId = com.google.api.client.util.Preconditions.checkNotNull(sessionId, "Required parameter sessionId must be specified.");
    }

    @Override
    public InsertComment setAlt(java.lang.String alt) {
      return (InsertComment) super.setAlt(alt);
    }

    @Override
    public InsertComment setFields(java.lang.String fields) {
      return (InsertComment) super.setFields(fields);
    }

    @Override
    public InsertComment setKey(java.lang.String key) {
      return (InsertComment) super.setKey(key);
    }

    @Override
    public InsertComment setOauthToken(java.lang.String oauthToken) {
      return (InsertComment) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertComment setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertComment) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertComment setQuotaUser(java.lang.String quotaUser) {
      return (InsertComment) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertComment setUserIp(java.lang.String userIp) {
      return (InsertComment) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long itemId;

    /**

     */
    public java.lang.Long getItemId() {
      return itemId;
    }

    public InsertComment setItemId(java.lang.Long itemId) {
      this.itemId = itemId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String message;

    /**

     */
    public java.lang.String getMessage() {
      return message;
    }

    public InsertComment setMessage(java.lang.String message) {
      this.message = message;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String sessionId;

    /**

     */
    public java.lang.String getSessionId() {
      return sessionId;
    }

    public InsertComment setSessionId(java.lang.String sessionId) {
      this.sessionId = sessionId;
      return this;
    }

    @Override
    public InsertComment set(String parameterName, Object value) {
      return (InsertComment) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertItem".
   *
   * This request holds the parameters needed by the the barternbargain server.  After setting any
   * optional parameters, call the {@link InsertItem#execute()} method to invoke the remote operation.
   *
   * @param sessionId
   * @param content the {@link hk.ust.barternbargain.barternbargain.model.Item}
   * @return the request
   */
  public InsertItem insertItem(java.lang.String sessionId, hk.ust.barternbargain.barternbargain.model.Item content) throws java.io.IOException {
    InsertItem result = new InsertItem(sessionId, content);
    initialize(result);
    return result;
  }

  public class InsertItem extends BarternbargainRequest<hk.ust.barternbargain.barternbargain.model.Item> {

    private static final String REST_PATH = "item/{sessionId}";

    /**
     * Create a request for the method "insertItem".
     *
     * This request holds the parameters needed by the the barternbargain server.  After setting any
     * optional parameters, call the {@link InsertItem#execute()} method to invoke the remote
     * operation. <p> {@link
     * InsertItem#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param sessionId
     * @param content the {@link hk.ust.barternbargain.barternbargain.model.Item}
     * @since 1.13
     */
    protected InsertItem(java.lang.String sessionId, hk.ust.barternbargain.barternbargain.model.Item content) {
      super(Barternbargain.this, "POST", REST_PATH, content, hk.ust.barternbargain.barternbargain.model.Item.class);
      this.sessionId = com.google.api.client.util.Preconditions.checkNotNull(sessionId, "Required parameter sessionId must be specified.");
    }

    @Override
    public InsertItem setAlt(java.lang.String alt) {
      return (InsertItem) super.setAlt(alt);
    }

    @Override
    public InsertItem setFields(java.lang.String fields) {
      return (InsertItem) super.setFields(fields);
    }

    @Override
    public InsertItem setKey(java.lang.String key) {
      return (InsertItem) super.setKey(key);
    }

    @Override
    public InsertItem setOauthToken(java.lang.String oauthToken) {
      return (InsertItem) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertItem setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertItem) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertItem setQuotaUser(java.lang.String quotaUser) {
      return (InsertItem) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertItem setUserIp(java.lang.String userIp) {
      return (InsertItem) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String sessionId;

    /**

     */
    public java.lang.String getSessionId() {
      return sessionId;
    }

    public InsertItem setSessionId(java.lang.String sessionId) {
      this.sessionId = sessionId;
      return this;
    }

    @Override
    public InsertItem set(String parameterName, Object value) {
      return (InsertItem) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertSession".
   *
   * This request holds the parameters needed by the the barternbargain server.  After setting any
   * optional parameters, call the {@link InsertSession#execute()} method to invoke the remote
   * operation.
   *
   * @param password
   * @param username
   * @return the request
   */
  public InsertSession insertSession(java.lang.String password, java.lang.String username) throws java.io.IOException {
    InsertSession result = new InsertSession(password, username);
    initialize(result);
    return result;
  }

  public class InsertSession extends BarternbargainRequest<hk.ust.barternbargain.barternbargain.model.Session> {

    private static final String REST_PATH = "sessions";

    /**
     * Create a request for the method "insertSession".
     *
     * This request holds the parameters needed by the the barternbargain server.  After setting any
     * optional parameters, call the {@link InsertSession#execute()} method to invoke the remote
     * operation. <p> {@link InsertSession#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param password
     * @param username
     * @since 1.13
     */
    protected InsertSession(java.lang.String password, java.lang.String username) {
      super(Barternbargain.this, "POST", REST_PATH, null, hk.ust.barternbargain.barternbargain.model.Session.class);
      this.password = com.google.api.client.util.Preconditions.checkNotNull(password, "Required parameter password must be specified.");
      this.username = com.google.api.client.util.Preconditions.checkNotNull(username, "Required parameter username must be specified.");
    }

    @Override
    public InsertSession setAlt(java.lang.String alt) {
      return (InsertSession) super.setAlt(alt);
    }

    @Override
    public InsertSession setFields(java.lang.String fields) {
      return (InsertSession) super.setFields(fields);
    }

    @Override
    public InsertSession setKey(java.lang.String key) {
      return (InsertSession) super.setKey(key);
    }

    @Override
    public InsertSession setOauthToken(java.lang.String oauthToken) {
      return (InsertSession) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertSession setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertSession) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertSession setQuotaUser(java.lang.String quotaUser) {
      return (InsertSession) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertSession setUserIp(java.lang.String userIp) {
      return (InsertSession) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String password;

    /**

     */
    public java.lang.String getPassword() {
      return password;
    }

    public InsertSession setPassword(java.lang.String password) {
      this.password = password;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String username;

    /**

     */
    public java.lang.String getUsername() {
      return username;
    }

    public InsertSession setUsername(java.lang.String username) {
      this.username = username;
      return this;
    }

    @Override
    public InsertSession set(String parameterName, Object value) {
      return (InsertSession) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertTrade".
   *
   * This request holds the parameters needed by the the barternbargain server.  After setting any
   * optional parameters, call the {@link InsertTrade#execute()} method to invoke the remote
   * operation.
   *
   * @param itemId
   * @param sessionId
   * @return the request
   */
  public InsertTrade insertTrade(java.lang.Long itemId, java.lang.String sessionId) throws java.io.IOException {
    InsertTrade result = new InsertTrade(itemId, sessionId);
    initialize(result);
    return result;
  }

  public class InsertTrade extends BarternbargainRequest<hk.ust.barternbargain.barternbargain.model.Trade> {

    private static final String REST_PATH = "items/{itemId}/trades";

    /**
     * Create a request for the method "insertTrade".
     *
     * This request holds the parameters needed by the the barternbargain server.  After setting any
     * optional parameters, call the {@link InsertTrade#execute()} method to invoke the remote
     * operation. <p> {@link
     * InsertTrade#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param itemId
     * @param sessionId
     * @since 1.13
     */
    protected InsertTrade(java.lang.Long itemId, java.lang.String sessionId) {
      super(Barternbargain.this, "POST", REST_PATH, null, hk.ust.barternbargain.barternbargain.model.Trade.class);
      this.itemId = com.google.api.client.util.Preconditions.checkNotNull(itemId, "Required parameter itemId must be specified.");
      this.sessionId = com.google.api.client.util.Preconditions.checkNotNull(sessionId, "Required parameter sessionId must be specified.");
    }

    @Override
    public InsertTrade setAlt(java.lang.String alt) {
      return (InsertTrade) super.setAlt(alt);
    }

    @Override
    public InsertTrade setFields(java.lang.String fields) {
      return (InsertTrade) super.setFields(fields);
    }

    @Override
    public InsertTrade setKey(java.lang.String key) {
      return (InsertTrade) super.setKey(key);
    }

    @Override
    public InsertTrade setOauthToken(java.lang.String oauthToken) {
      return (InsertTrade) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertTrade setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertTrade) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertTrade setQuotaUser(java.lang.String quotaUser) {
      return (InsertTrade) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertTrade setUserIp(java.lang.String userIp) {
      return (InsertTrade) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long itemId;

    /**

     */
    public java.lang.Long getItemId() {
      return itemId;
    }

    public InsertTrade setItemId(java.lang.Long itemId) {
      this.itemId = itemId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String sessionId;

    /**

     */
    public java.lang.String getSessionId() {
      return sessionId;
    }

    public InsertTrade setSessionId(java.lang.String sessionId) {
      this.sessionId = sessionId;
      return this;
    }

    @Override
    public InsertTrade set(String parameterName, Object value) {
      return (InsertTrade) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertUser".
   *
   * This request holds the parameters needed by the the barternbargain server.  After setting any
   * optional parameters, call the {@link InsertUser#execute()} method to invoke the remote operation.
   *
   * @param sessionId
   * @param content the {@link hk.ust.barternbargain.barternbargain.model.User}
   * @return the request
   */
  public InsertUser insertUser(java.lang.String sessionId, hk.ust.barternbargain.barternbargain.model.User content) throws java.io.IOException {
    InsertUser result = new InsertUser(sessionId, content);
    initialize(result);
    return result;
  }

  public class InsertUser extends BarternbargainRequest<hk.ust.barternbargain.barternbargain.model.User> {

    private static final String REST_PATH = "user/{sessionId}";

    /**
     * Create a request for the method "insertUser".
     *
     * This request holds the parameters needed by the the barternbargain server.  After setting any
     * optional parameters, call the {@link InsertUser#execute()} method to invoke the remote
     * operation. <p> {@link
     * InsertUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param sessionId
     * @param content the {@link hk.ust.barternbargain.barternbargain.model.User}
     * @since 1.13
     */
    protected InsertUser(java.lang.String sessionId, hk.ust.barternbargain.barternbargain.model.User content) {
      super(Barternbargain.this, "POST", REST_PATH, content, hk.ust.barternbargain.barternbargain.model.User.class);
      this.sessionId = com.google.api.client.util.Preconditions.checkNotNull(sessionId, "Required parameter sessionId must be specified.");
    }

    @Override
    public InsertUser setAlt(java.lang.String alt) {
      return (InsertUser) super.setAlt(alt);
    }

    @Override
    public InsertUser setFields(java.lang.String fields) {
      return (InsertUser) super.setFields(fields);
    }

    @Override
    public InsertUser setKey(java.lang.String key) {
      return (InsertUser) super.setKey(key);
    }

    @Override
    public InsertUser setOauthToken(java.lang.String oauthToken) {
      return (InsertUser) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertUser setQuotaUser(java.lang.String quotaUser) {
      return (InsertUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertUser setUserIp(java.lang.String userIp) {
      return (InsertUser) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String sessionId;

    /**

     */
    public java.lang.String getSessionId() {
      return sessionId;
    }

    public InsertUser setSessionId(java.lang.String sessionId) {
      this.sessionId = sessionId;
      return this;
    }

    @Override
    public InsertUser set(String parameterName, Object value) {
      return (InsertUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listComment".
   *
   * This request holds the parameters needed by the the barternbargain server.  After setting any
   * optional parameters, call the {@link ListComment#execute()} method to invoke the remote
   * operation.
   *
   * @param itemId
   * @return the request
   */
  public ListComment listComment(java.lang.Long itemId) throws java.io.IOException {
    ListComment result = new ListComment(itemId);
    initialize(result);
    return result;
  }

  public class ListComment extends BarternbargainRequest<hk.ust.barternbargain.barternbargain.model.CommentCollection> {

    private static final String REST_PATH = "items/{itemId}/comments";

    /**
     * Create a request for the method "listComment".
     *
     * This request holds the parameters needed by the the barternbargain server.  After setting any
     * optional parameters, call the {@link ListComment#execute()} method to invoke the remote
     * operation. <p> {@link
     * ListComment#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param itemId
     * @since 1.13
     */
    protected ListComment(java.lang.Long itemId) {
      super(Barternbargain.this, "GET", REST_PATH, null, hk.ust.barternbargain.barternbargain.model.CommentCollection.class);
      this.itemId = com.google.api.client.util.Preconditions.checkNotNull(itemId, "Required parameter itemId must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListComment setAlt(java.lang.String alt) {
      return (ListComment) super.setAlt(alt);
    }

    @Override
    public ListComment setFields(java.lang.String fields) {
      return (ListComment) super.setFields(fields);
    }

    @Override
    public ListComment setKey(java.lang.String key) {
      return (ListComment) super.setKey(key);
    }

    @Override
    public ListComment setOauthToken(java.lang.String oauthToken) {
      return (ListComment) super.setOauthToken(oauthToken);
    }

    @Override
    public ListComment setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListComment) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListComment setQuotaUser(java.lang.String quotaUser) {
      return (ListComment) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListComment setUserIp(java.lang.String userIp) {
      return (ListComment) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long itemId;

    /**

     */
    public java.lang.Long getItemId() {
      return itemId;
    }

    public ListComment setItemId(java.lang.Long itemId) {
      this.itemId = itemId;
      return this;
    }

    @Override
    public ListComment set(String parameterName, Object value) {
      return (ListComment) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listItem".
   *
   * This request holds the parameters needed by the the barternbargain server.  After setting any
   * optional parameters, call the {@link ListItem#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public ListItem listItem() throws java.io.IOException {
    ListItem result = new ListItem();
    initialize(result);
    return result;
  }

  public class ListItem extends BarternbargainRequest<hk.ust.barternbargain.barternbargain.model.ItemCollection> {

    private static final String REST_PATH = "items";

    /**
     * Create a request for the method "listItem".
     *
     * This request holds the parameters needed by the the barternbargain server.  After setting any
     * optional parameters, call the {@link ListItem#execute()} method to invoke the remote operation.
     * <p> {@link
     * ListItem#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListItem() {
      super(Barternbargain.this, "GET", REST_PATH, null, hk.ust.barternbargain.barternbargain.model.ItemCollection.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListItem setAlt(java.lang.String alt) {
      return (ListItem) super.setAlt(alt);
    }

    @Override
    public ListItem setFields(java.lang.String fields) {
      return (ListItem) super.setFields(fields);
    }

    @Override
    public ListItem setKey(java.lang.String key) {
      return (ListItem) super.setKey(key);
    }

    @Override
    public ListItem setOauthToken(java.lang.String oauthToken) {
      return (ListItem) super.setOauthToken(oauthToken);
    }

    @Override
    public ListItem setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListItem) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListItem setQuotaUser(java.lang.String quotaUser) {
      return (ListItem) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListItem setUserIp(java.lang.String userIp) {
      return (ListItem) super.setUserIp(userIp);
    }

    @Override
    public ListItem set(String parameterName, Object value) {
      return (ListItem) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listUserItem".
   *
   * This request holds the parameters needed by the the barternbargain server.  After setting any
   * optional parameters, call the {@link ListUserItem#execute()} method to invoke the remote
   * operation.
   *
   * @param userId
   * @return the request
   */
  public ListUserItem listUserItem(java.lang.String userId) throws java.io.IOException {
    ListUserItem result = new ListUserItem(userId);
    initialize(result);
    return result;
  }

  public class ListUserItem extends BarternbargainRequest<hk.ust.barternbargain.barternbargain.model.ItemCollection> {

    private static final String REST_PATH = "users/{userId}/items";

    /**
     * Create a request for the method "listUserItem".
     *
     * This request holds the parameters needed by the the barternbargain server.  After setting any
     * optional parameters, call the {@link ListUserItem#execute()} method to invoke the remote
     * operation. <p> {@link
     * ListUserItem#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param userId
     * @since 1.13
     */
    protected ListUserItem(java.lang.String userId) {
      super(Barternbargain.this, "GET", REST_PATH, null, hk.ust.barternbargain.barternbargain.model.ItemCollection.class);
      this.userId = com.google.api.client.util.Preconditions.checkNotNull(userId, "Required parameter userId must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListUserItem setAlt(java.lang.String alt) {
      return (ListUserItem) super.setAlt(alt);
    }

    @Override
    public ListUserItem setFields(java.lang.String fields) {
      return (ListUserItem) super.setFields(fields);
    }

    @Override
    public ListUserItem setKey(java.lang.String key) {
      return (ListUserItem) super.setKey(key);
    }

    @Override
    public ListUserItem setOauthToken(java.lang.String oauthToken) {
      return (ListUserItem) super.setOauthToken(oauthToken);
    }

    @Override
    public ListUserItem setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListUserItem) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListUserItem setQuotaUser(java.lang.String quotaUser) {
      return (ListUserItem) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListUserItem setUserIp(java.lang.String userIp) {
      return (ListUserItem) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String userId;

    /**

     */
    public java.lang.String getUserId() {
      return userId;
    }

    public ListUserItem setUserId(java.lang.String userId) {
      this.userId = userId;
      return this;
    }

    @Override
    public ListUserItem set(String parameterName, Object value) {
      return (ListUserItem) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listUserTrade".
   *
   * This request holds the parameters needed by the the barternbargain server.  After setting any
   * optional parameters, call the {@link ListUserTrade#execute()} method to invoke the remote
   * operation.
   *
   * @param userId
   * @return the request
   */
  public ListUserTrade listUserTrade(java.lang.String userId) throws java.io.IOException {
    ListUserTrade result = new ListUserTrade(userId);
    initialize(result);
    return result;
  }

  public class ListUserTrade extends BarternbargainRequest<hk.ust.barternbargain.barternbargain.model.TradeCollection> {

    private static final String REST_PATH = "users/{userId}/trades";

    /**
     * Create a request for the method "listUserTrade".
     *
     * This request holds the parameters needed by the the barternbargain server.  After setting any
     * optional parameters, call the {@link ListUserTrade#execute()} method to invoke the remote
     * operation. <p> {@link ListUserTrade#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param userId
     * @since 1.13
     */
    protected ListUserTrade(java.lang.String userId) {
      super(Barternbargain.this, "GET", REST_PATH, null, hk.ust.barternbargain.barternbargain.model.TradeCollection.class);
      this.userId = com.google.api.client.util.Preconditions.checkNotNull(userId, "Required parameter userId must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListUserTrade setAlt(java.lang.String alt) {
      return (ListUserTrade) super.setAlt(alt);
    }

    @Override
    public ListUserTrade setFields(java.lang.String fields) {
      return (ListUserTrade) super.setFields(fields);
    }

    @Override
    public ListUserTrade setKey(java.lang.String key) {
      return (ListUserTrade) super.setKey(key);
    }

    @Override
    public ListUserTrade setOauthToken(java.lang.String oauthToken) {
      return (ListUserTrade) super.setOauthToken(oauthToken);
    }

    @Override
    public ListUserTrade setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListUserTrade) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListUserTrade setQuotaUser(java.lang.String quotaUser) {
      return (ListUserTrade) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListUserTrade setUserIp(java.lang.String userIp) {
      return (ListUserTrade) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String userId;

    /**

     */
    public java.lang.String getUserId() {
      return userId;
    }

    public ListUserTrade setUserId(java.lang.String userId) {
      this.userId = userId;
      return this;
    }

    @Override
    public ListUserTrade set(String parameterName, Object value) {
      return (ListUserTrade) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "rejectTrade".
   *
   * This request holds the parameters needed by the the barternbargain server.  After setting any
   * optional parameters, call the {@link RejectTrade#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @param sessionId
   * @return the request
   */
  public RejectTrade rejectTrade(java.lang.Long id, java.lang.String sessionId) throws java.io.IOException {
    RejectTrade result = new RejectTrade(id, sessionId);
    initialize(result);
    return result;
  }

  public class RejectTrade extends BarternbargainRequest<hk.ust.barternbargain.barternbargain.model.Trade> {

    private static final String REST_PATH = "trades/{id}/reject";

    /**
     * Create a request for the method "rejectTrade".
     *
     * This request holds the parameters needed by the the barternbargain server.  After setting any
     * optional parameters, call the {@link RejectTrade#execute()} method to invoke the remote
     * operation. <p> {@link
     * RejectTrade#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @param sessionId
     * @since 1.13
     */
    protected RejectTrade(java.lang.Long id, java.lang.String sessionId) {
      super(Barternbargain.this, "POST", REST_PATH, null, hk.ust.barternbargain.barternbargain.model.Trade.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.sessionId = com.google.api.client.util.Preconditions.checkNotNull(sessionId, "Required parameter sessionId must be specified.");
    }

    @Override
    public RejectTrade setAlt(java.lang.String alt) {
      return (RejectTrade) super.setAlt(alt);
    }

    @Override
    public RejectTrade setFields(java.lang.String fields) {
      return (RejectTrade) super.setFields(fields);
    }

    @Override
    public RejectTrade setKey(java.lang.String key) {
      return (RejectTrade) super.setKey(key);
    }

    @Override
    public RejectTrade setOauthToken(java.lang.String oauthToken) {
      return (RejectTrade) super.setOauthToken(oauthToken);
    }

    @Override
    public RejectTrade setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RejectTrade) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RejectTrade setQuotaUser(java.lang.String quotaUser) {
      return (RejectTrade) super.setQuotaUser(quotaUser);
    }

    @Override
    public RejectTrade setUserIp(java.lang.String userIp) {
      return (RejectTrade) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RejectTrade setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String sessionId;

    /**

     */
    public java.lang.String getSessionId() {
      return sessionId;
    }

    public RejectTrade setSessionId(java.lang.String sessionId) {
      this.sessionId = sessionId;
      return this;
    }

    @Override
    public RejectTrade set(String parameterName, Object value) {
      return (RejectTrade) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeComment".
   *
   * This request holds the parameters needed by the the barternbargain server.  After setting any
   * optional parameters, call the {@link RemoveComment#execute()} method to invoke the remote
   * operation.
   *
   * @param commentId
   * @param sessionId
   * @return the request
   */
  public RemoveComment removeComment(java.lang.Long commentId, java.lang.String sessionId) throws java.io.IOException {
    RemoveComment result = new RemoveComment(commentId, sessionId);
    initialize(result);
    return result;
  }

  public class RemoveComment extends BarternbargainRequest<Void> {

    private static final String REST_PATH = "comments/{commentId}";

    /**
     * Create a request for the method "removeComment".
     *
     * This request holds the parameters needed by the the barternbargain server.  After setting any
     * optional parameters, call the {@link RemoveComment#execute()} method to invoke the remote
     * operation. <p> {@link RemoveComment#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param commentId
     * @param sessionId
     * @since 1.13
     */
    protected RemoveComment(java.lang.Long commentId, java.lang.String sessionId) {
      super(Barternbargain.this, "DELETE", REST_PATH, null, Void.class);
      this.commentId = com.google.api.client.util.Preconditions.checkNotNull(commentId, "Required parameter commentId must be specified.");
      this.sessionId = com.google.api.client.util.Preconditions.checkNotNull(sessionId, "Required parameter sessionId must be specified.");
    }

    @Override
    public RemoveComment setAlt(java.lang.String alt) {
      return (RemoveComment) super.setAlt(alt);
    }

    @Override
    public RemoveComment setFields(java.lang.String fields) {
      return (RemoveComment) super.setFields(fields);
    }

    @Override
    public RemoveComment setKey(java.lang.String key) {
      return (RemoveComment) super.setKey(key);
    }

    @Override
    public RemoveComment setOauthToken(java.lang.String oauthToken) {
      return (RemoveComment) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveComment setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveComment) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveComment setQuotaUser(java.lang.String quotaUser) {
      return (RemoveComment) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveComment setUserIp(java.lang.String userIp) {
      return (RemoveComment) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long commentId;

    /**

     */
    public java.lang.Long getCommentId() {
      return commentId;
    }

    public RemoveComment setCommentId(java.lang.Long commentId) {
      this.commentId = commentId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String sessionId;

    /**

     */
    public java.lang.String getSessionId() {
      return sessionId;
    }

    public RemoveComment setSessionId(java.lang.String sessionId) {
      this.sessionId = sessionId;
      return this;
    }

    @Override
    public RemoveComment set(String parameterName, Object value) {
      return (RemoveComment) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeItem".
   *
   * This request holds the parameters needed by the the barternbargain server.  After setting any
   * optional parameters, call the {@link RemoveItem#execute()} method to invoke the remote operation.
   *
   * @param id
   * @param sessionId
   * @return the request
   */
  public RemoveItem removeItem(java.lang.Long id, java.lang.String sessionId) throws java.io.IOException {
    RemoveItem result = new RemoveItem(id, sessionId);
    initialize(result);
    return result;
  }

  public class RemoveItem extends BarternbargainRequest<Void> {

    private static final String REST_PATH = "items/{id}";

    /**
     * Create a request for the method "removeItem".
     *
     * This request holds the parameters needed by the the barternbargain server.  After setting any
     * optional parameters, call the {@link RemoveItem#execute()} method to invoke the remote
     * operation. <p> {@link
     * RemoveItem#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @param sessionId
     * @since 1.13
     */
    protected RemoveItem(java.lang.Long id, java.lang.String sessionId) {
      super(Barternbargain.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.sessionId = com.google.api.client.util.Preconditions.checkNotNull(sessionId, "Required parameter sessionId must be specified.");
    }

    @Override
    public RemoveItem setAlt(java.lang.String alt) {
      return (RemoveItem) super.setAlt(alt);
    }

    @Override
    public RemoveItem setFields(java.lang.String fields) {
      return (RemoveItem) super.setFields(fields);
    }

    @Override
    public RemoveItem setKey(java.lang.String key) {
      return (RemoveItem) super.setKey(key);
    }

    @Override
    public RemoveItem setOauthToken(java.lang.String oauthToken) {
      return (RemoveItem) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveItem setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveItem) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveItem setQuotaUser(java.lang.String quotaUser) {
      return (RemoveItem) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveItem setUserIp(java.lang.String userIp) {
      return (RemoveItem) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveItem setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String sessionId;

    /**

     */
    public java.lang.String getSessionId() {
      return sessionId;
    }

    public RemoveItem setSessionId(java.lang.String sessionId) {
      this.sessionId = sessionId;
      return this;
    }

    @Override
    public RemoveItem set(String parameterName, Object value) {
      return (RemoveItem) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeSession".
   *
   * This request holds the parameters needed by the the barternbargain server.  After setting any
   * optional parameters, call the {@link RemoveSession#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public RemoveSession removeSession(java.lang.String id) throws java.io.IOException {
    RemoveSession result = new RemoveSession(id);
    initialize(result);
    return result;
  }

  public class RemoveSession extends BarternbargainRequest<Void> {

    private static final String REST_PATH = "sessions/{id}";

    /**
     * Create a request for the method "removeSession".
     *
     * This request holds the parameters needed by the the barternbargain server.  After setting any
     * optional parameters, call the {@link RemoveSession#execute()} method to invoke the remote
     * operation. <p> {@link RemoveSession#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveSession(java.lang.String id) {
      super(Barternbargain.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveSession setAlt(java.lang.String alt) {
      return (RemoveSession) super.setAlt(alt);
    }

    @Override
    public RemoveSession setFields(java.lang.String fields) {
      return (RemoveSession) super.setFields(fields);
    }

    @Override
    public RemoveSession setKey(java.lang.String key) {
      return (RemoveSession) super.setKey(key);
    }

    @Override
    public RemoveSession setOauthToken(java.lang.String oauthToken) {
      return (RemoveSession) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveSession setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveSession) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveSession setQuotaUser(java.lang.String quotaUser) {
      return (RemoveSession) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveSession setUserIp(java.lang.String userIp) {
      return (RemoveSession) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String id;

    /**

     */
    public java.lang.String getId() {
      return id;
    }

    public RemoveSession setId(java.lang.String id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveSession set(String parameterName, Object value) {
      return (RemoveSession) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateComment".
   *
   * This request holds the parameters needed by the the barternbargain server.  After setting any
   * optional parameters, call the {@link UpdateComment#execute()} method to invoke the remote
   * operation.
   *
   * @param sessionId
   * @param content the {@link hk.ust.barternbargain.barternbargain.model.Comment}
   * @return the request
   */
  public UpdateComment updateComment(java.lang.String sessionId, hk.ust.barternbargain.barternbargain.model.Comment content) throws java.io.IOException {
    UpdateComment result = new UpdateComment(sessionId, content);
    initialize(result);
    return result;
  }

  public class UpdateComment extends BarternbargainRequest<hk.ust.barternbargain.barternbargain.model.Comment> {

    private static final String REST_PATH = "comment/{sessionId}";

    /**
     * Create a request for the method "updateComment".
     *
     * This request holds the parameters needed by the the barternbargain server.  After setting any
     * optional parameters, call the {@link UpdateComment#execute()} method to invoke the remote
     * operation. <p> {@link UpdateComment#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param sessionId
     * @param content the {@link hk.ust.barternbargain.barternbargain.model.Comment}
     * @since 1.13
     */
    protected UpdateComment(java.lang.String sessionId, hk.ust.barternbargain.barternbargain.model.Comment content) {
      super(Barternbargain.this, "PUT", REST_PATH, content, hk.ust.barternbargain.barternbargain.model.Comment.class);
      this.sessionId = com.google.api.client.util.Preconditions.checkNotNull(sessionId, "Required parameter sessionId must be specified.");
    }

    @Override
    public UpdateComment setAlt(java.lang.String alt) {
      return (UpdateComment) super.setAlt(alt);
    }

    @Override
    public UpdateComment setFields(java.lang.String fields) {
      return (UpdateComment) super.setFields(fields);
    }

    @Override
    public UpdateComment setKey(java.lang.String key) {
      return (UpdateComment) super.setKey(key);
    }

    @Override
    public UpdateComment setOauthToken(java.lang.String oauthToken) {
      return (UpdateComment) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateComment setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateComment) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateComment setQuotaUser(java.lang.String quotaUser) {
      return (UpdateComment) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateComment setUserIp(java.lang.String userIp) {
      return (UpdateComment) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String sessionId;

    /**

     */
    public java.lang.String getSessionId() {
      return sessionId;
    }

    public UpdateComment setSessionId(java.lang.String sessionId) {
      this.sessionId = sessionId;
      return this;
    }

    @Override
    public UpdateComment set(String parameterName, Object value) {
      return (UpdateComment) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateItem".
   *
   * This request holds the parameters needed by the the barternbargain server.  After setting any
   * optional parameters, call the {@link UpdateItem#execute()} method to invoke the remote operation.
   *
   * @param sessionId
   * @param content the {@link hk.ust.barternbargain.barternbargain.model.Item}
   * @return the request
   */
  public UpdateItem updateItem(java.lang.String sessionId, hk.ust.barternbargain.barternbargain.model.Item content) throws java.io.IOException {
    UpdateItem result = new UpdateItem(sessionId, content);
    initialize(result);
    return result;
  }

  public class UpdateItem extends BarternbargainRequest<hk.ust.barternbargain.barternbargain.model.Item> {

    private static final String REST_PATH = "item/{sessionId}";

    /**
     * Create a request for the method "updateItem".
     *
     * This request holds the parameters needed by the the barternbargain server.  After setting any
     * optional parameters, call the {@link UpdateItem#execute()} method to invoke the remote
     * operation. <p> {@link
     * UpdateItem#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param sessionId
     * @param content the {@link hk.ust.barternbargain.barternbargain.model.Item}
     * @since 1.13
     */
    protected UpdateItem(java.lang.String sessionId, hk.ust.barternbargain.barternbargain.model.Item content) {
      super(Barternbargain.this, "PUT", REST_PATH, content, hk.ust.barternbargain.barternbargain.model.Item.class);
      this.sessionId = com.google.api.client.util.Preconditions.checkNotNull(sessionId, "Required parameter sessionId must be specified.");
    }

    @Override
    public UpdateItem setAlt(java.lang.String alt) {
      return (UpdateItem) super.setAlt(alt);
    }

    @Override
    public UpdateItem setFields(java.lang.String fields) {
      return (UpdateItem) super.setFields(fields);
    }

    @Override
    public UpdateItem setKey(java.lang.String key) {
      return (UpdateItem) super.setKey(key);
    }

    @Override
    public UpdateItem setOauthToken(java.lang.String oauthToken) {
      return (UpdateItem) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateItem setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateItem) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateItem setQuotaUser(java.lang.String quotaUser) {
      return (UpdateItem) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateItem setUserIp(java.lang.String userIp) {
      return (UpdateItem) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String sessionId;

    /**

     */
    public java.lang.String getSessionId() {
      return sessionId;
    }

    public UpdateItem setSessionId(java.lang.String sessionId) {
      this.sessionId = sessionId;
      return this;
    }

    @Override
    public UpdateItem set(String parameterName, Object value) {
      return (UpdateItem) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateUser".
   *
   * This request holds the parameters needed by the the barternbargain server.  After setting any
   * optional parameters, call the {@link UpdateUser#execute()} method to invoke the remote operation.
   *
   * @param sessionId
   * @param content the {@link hk.ust.barternbargain.barternbargain.model.User}
   * @return the request
   */
  public UpdateUser updateUser(java.lang.String sessionId, hk.ust.barternbargain.barternbargain.model.User content) throws java.io.IOException {
    UpdateUser result = new UpdateUser(sessionId, content);
    initialize(result);
    return result;
  }

  public class UpdateUser extends BarternbargainRequest<hk.ust.barternbargain.barternbargain.model.User> {

    private static final String REST_PATH = "user/{sessionId}";

    /**
     * Create a request for the method "updateUser".
     *
     * This request holds the parameters needed by the the barternbargain server.  After setting any
     * optional parameters, call the {@link UpdateUser#execute()} method to invoke the remote
     * operation. <p> {@link
     * UpdateUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param sessionId
     * @param content the {@link hk.ust.barternbargain.barternbargain.model.User}
     * @since 1.13
     */
    protected UpdateUser(java.lang.String sessionId, hk.ust.barternbargain.barternbargain.model.User content) {
      super(Barternbargain.this, "PUT", REST_PATH, content, hk.ust.barternbargain.barternbargain.model.User.class);
      this.sessionId = com.google.api.client.util.Preconditions.checkNotNull(sessionId, "Required parameter sessionId must be specified.");
    }

    @Override
    public UpdateUser setAlt(java.lang.String alt) {
      return (UpdateUser) super.setAlt(alt);
    }

    @Override
    public UpdateUser setFields(java.lang.String fields) {
      return (UpdateUser) super.setFields(fields);
    }

    @Override
    public UpdateUser setKey(java.lang.String key) {
      return (UpdateUser) super.setKey(key);
    }

    @Override
    public UpdateUser setOauthToken(java.lang.String oauthToken) {
      return (UpdateUser) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateUser setQuotaUser(java.lang.String quotaUser) {
      return (UpdateUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateUser setUserIp(java.lang.String userIp) {
      return (UpdateUser) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String sessionId;

    /**

     */
    public java.lang.String getSessionId() {
      return sessionId;
    }

    public UpdateUser setSessionId(java.lang.String sessionId) {
      this.sessionId = sessionId;
      return this;
    }

    @Override
    public UpdateUser set(String parameterName, Object value) {
      return (UpdateUser) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link Barternbargain}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Barternbargain}. */
    @Override
    public Barternbargain build() {
      return new Barternbargain(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link BarternbargainRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setBarternbargainRequestInitializer(
        BarternbargainRequestInitializer barternbargainRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(barternbargainRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
